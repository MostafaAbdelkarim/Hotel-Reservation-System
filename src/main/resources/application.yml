#spring.datasource.url=${JDBC_DATABASE_URL\:jdbc\:postgresql\://localhost\:5432/test}
#spring.datasource.username=${JDBC_DATABASE_USERNAME\:postgres}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD\:1751997}
#spring.dbcp2.max-wait-millis=30000
#spring.dbcp2.validation-query=SELECT 1
#spring.dbcp2.validation-query-timeout=30
#spring.jpa.hibernate.ddl-auto=update
#pring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.open-in-view=false
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=true
#springdoc.pathsToMatch=/api/**



##############################   H2-DATABASE  #############################################

spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:h2:mem:hotel-reservation-system}
    username: ${JDBC_DATABASE_USERNAME:sa}
    password: ${JDBC_DATABASE_PASSWORD:}
  dbcp2:
    max-wait-millis: 30000
    validation-query: "SELECT 1"
    validation-query-timeout: 30
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  mvc: ## for spring Null
    pathmatch:
      matching-strategy: ant_path_matcher
springdoc:
  pathsToMatch: /api/**

############################    POSTGRESQL     ################################################

#spring.datasource.url=jdbc:postgresql://localhost:5432/test
#spring.datasource.username=postgres
#spring.datasource.password=pass
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true

#############################################################################